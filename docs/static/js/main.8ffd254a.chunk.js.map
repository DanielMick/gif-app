{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","GifGridItem","item","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","items","useFetchGifs","key","GifApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAmCeA,MAhCf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAetC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,OAMd,4CACA,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAY,2BCbLC,EAVK,SAAC,GAAa,IAAXC,EAAU,EAAVA,KAErB,OACE,yBAAKC,UAAU,4BACb,yBAAKC,IAAKF,EAAKG,IAAKC,IAAKJ,EAAKK,QAC9B,2BAAIL,EAAKK,MAAT,O,uBCPOC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,iDACiCM,UACpDF,GAFmB,+DAIFG,MAAMP,GAJJ,cAIfQ,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRZ,MAAOW,EAAIX,MACXF,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAXjB,kBAcdW,GAdc,4CAAH,sDCqBLM,EAjBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDZmBK,CAAapB,GAA/BM,EAFwB,EAExBA,KAAMQ,EAFkB,EAElBA,QAEd,OACE,oCACE,gCAAMd,EAAN,KACCc,GAAW,0CACZ,yBAAKpB,UAAU,aACZY,EAAKE,KAAI,SAACf,GAAD,OACR,kBAAC,EAAD,CAAa4B,IAAK5B,EAAKiB,GAAIjB,KAAMA,UEQ5B6B,EAlBA,WACb,IADmB,EAEiB5C,mBADjB,CAAC,YADD,mBAEZ6C,EAFY,KAEA9C,EAFA,KAInB,OACE,oCACE,uCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG8C,EAAWf,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UCV5CwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8ffd254a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddCategory({ setCategories }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue,...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add Category</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Agrega una categoria\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ item}) => {\r\n    \r\n  return (\r\n    <div className=\"card animate__fadeInDown\">\r\n      <img src={item.url} alt={item.title} />\r\n      <p>{item.title} </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=JQxbSR8LpEUZPt7yWnVneZYci7rGDK5y`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3> {category} </h3>\r\n      {loading && <p>Cargando...</p>}\r\n      <div className=\"card-grid\">\r\n        {data.map((item) => (\r\n          <GifGridItem key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((items) => {\r\n      setState({\r\n        data: items,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifApp = () => {\r\n  const categorias = [\"malcolm\"];\r\n  const [categories, setCategories] = useState(categorias);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}